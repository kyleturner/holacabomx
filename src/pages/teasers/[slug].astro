---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import { Image } from 'astro:assets'
import Pricing from "@components/pricing.astro";
import FAQ from "@components/faq.astro";
import Link from "@components/ui/link.astro";
import cactusImage from "assets/cactus.svg";

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const teasers = await getCollection("teasers");
  return teasers.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the entry directly from the prop on render
const { entry } = Astro.props;
const { Content } = await entry.render();
---
<style>
  .textOverlay {
    position: absolute; 
    bottom: 8%;
    margin: 20px;
  }
</style>
<Layout title={entry.data.title}>
  <Container>
    <div class="mx-auto relative">
      <Image
      src={entry.data.image.src}
      alt={entry.data.image.alt}
      width={800}
      height={800}
      background="#ffffff"
      fit="cover"
      position="center"
      loading={"eager"}
      decoding={"sync"}
    />
    <div class="textOverlay header-text">
      <h1 class="p-2 xl:text-7xl lg:text-6xl md:text-5xl sm:text-5xl lg:tracking-tight xl:tracking-tighter font-bold">{entry.data.subtitle}</h1>
      <h2 class="p-2 text-xl text-gray-100 mb-4">{entry.data.snippet}</h2>
      <Link href={entry.data.plan.button.link} style="primary">{entry.data.plan.button.text}</Link>
    </div>
  </div>
    <div class="mx-auto max-w-3xl mt-14">
      <span class="color-primary uppercase tracking-wider text-sm font-medium">
        {entry.data.category}
      </span>
      <h1
        class="text-7xl color-primary-dark font-bold lg:tracking-tight mt-1 lg:leading-tight">
        {entry.data.title}
      </h1>
    </div>
    <div class="mx-auto prose prose-lg mt-8 max-w-3xl">
      <!-- Featured Testimonial -->
      <!-- <div class="w-full md:w-auto flex">
        { entry.data.testimonials.filter(t => t.featured).map(t => (<Quoteblock entry={t}/>)) }
      </div> -->
      <!-- Markdown Guide Teaser Content -->
      <Content />
      <!-- Highlights -->
      <div class="grid grid-cols-2 gap-4">
      { entry.data.highlights.map(highlight => 
        (<div class="min-w-full">
          <img style="aspect-ratio:3/2"  class="fadeIn h-min mb-4" width="300" src={highlight.image} />
          <h4 class="color-primary-dark mt-0">{highlight.title}</h4>
          <p class="text-sm">{highlight.text}</p>
        </div>)
      )}
      </div>
    </div>
    <!-- Guide Pricing Table -->
    <div class="px-0 items-center justify-center bg-color-dark mt-16" style="width:100%; position: relative;">
      <div class="invisible xl:visible 2xl:visibile">
        <img src={cactusImage} width="300px" style="position: absolute; right: 20px; bottom: -20px;" />
      </div>
      <div class="mx-auto max-w-3xl bg-white p-16">
        {<Pricing data={entry.data} />}
      </div>
    </div>
    <div class="mx-auto prose prose-lg mt-16 max-w-3xl">
      <!-- FAQ -->
      <div class="w-full md:w-auto flex mt-16">
        {<FAQ entry={entry} />}
      </div>
    </div>
    <!-- Back Button -->
    <div class="text-center mt-12 pb-12">
      <a
        href="/guides"
        class="bg-gray-100 px-4 sm:px-10 py-3 rounded-md hover:bg-gray-200 transition">
        ‚Üê Back to all guides
      </a>
    </div>
  </Container>
</Layout>
