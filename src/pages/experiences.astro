---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import ExperienceBlock from "@components/blocks/experienceBlock.astro";
import Link from "@components/ui/link.astro";

const metadata = {
  'title': "Local Experiences",
}

// Filter experiences entries with 'draft: false' & date before current date
const publishedExperiencesEntries = await getCollection("experiences", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});
// Sort content entries by publication date
publishedExperiencesEntries.sort(function (a, b) {
  return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
});

// TODO: May want to make this static to control which show up for selection
const uniqueTags = [...new Set(publishedExperiencesEntries.map((experience) => experience.data.tags).flat())];
---

<Layout title="experiences">
  <Container>
    <Sectionhead>
      <Fragment slot="title">{metadata.title}</Fragment>
      <Fragment slot="buttons">
        <div class="flex flex-row justify-center mb-8">
          {
            uniqueTags.map((tag) => (
                <Link style="outline" 
                class="tag text-lg" 
                href={"/tags/" + tag}>{tag}</Link>
            ))
          }
          </div>
      </Fragment>
    </Sectionhead>
    <main class="p-8">
      <ul class="grid gap-16 md:grid-cols-2 mx-auto">
        {
          publishedExperiencesEntries.map((experienceEntry, index) => (
            <li>
              <ExperienceBlock 
                entry={experienceEntry.data} 
                slug={experienceEntry.slug} 
                index={index} />
            </li>
          ))
        }
      </ul>
    </main>
  </Container>
</Layout>
